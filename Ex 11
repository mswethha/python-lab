import java.sql.*;

public class DatabaseExample {

    private static final String JDBC_URL = "jdbc:sqlite:books.db";

    public static void main(String[] args) {
        try {
            // Connect to the database
            Connection connection = DriverManager.getConnection(JDBC_URL);

            // Set up the database (assuming 'books' table exists)
            createTable(connection);

            // Execute database functions
            selectAllBooks(connection);
            selectBooksByAuthor(connection, "Tan Ah Teck");
            increasePrice(connection, "A Cup of Java", 0.5);
            setQtyToZero(connection, "A Teaspoon of Java");
            deleteBookById(connection, 8001);
            insertBooks(connection, 8001, "Java ABC", "Kevin Jones", 15.55, 55);
            insertBooks(connection, 8002, "Java XYZ", "Kevin Jones", 20.00, 30);

            // Close the connection
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void createTable(Connection connection) throws SQLException {
        // Assuming 'books' table has columns: id, title, author, price, qty
        String createTableSQL = "CREATE TABLE IF NOT EXISTS books " +
                "(id INT PRIMARY KEY, title TEXT, author TEXT, price DOUBLE, qty INT)";
        Statement statement = connection.createStatement();
        statement.executeUpdate(createTableSQL);
        statement.close();
    }

    private static void selectAllBooks(Connection connection) throws SQLException {
        String selectAllSQL = "SELECT * FROM books";
        Statement statement = connection.createStatement();
        ResultSet resultSet = statement.executeQuery(selectAllSQL);

        // Process the result set
        while (resultSet.next()) {
            System.out.println(
                    "ID: " + resultSet.getInt("id") +
                            ", Title: " + resultSet.getString("title") +
                            ", Author: " + resultSet.getString("author") +
                            ", Price: $" + resultSet.getDouble("price") +
                            ", Quantity: " + resultSet.getInt("qty")
            );
        }

        resultSet.close();
        statement.close();
    }

    private static void selectBooksByAuthor(Connection connection, String author) throws SQLException {
        String selectByAuthorSQL = "SELECT title, author, price, qty FROM books WHERE author = ?";
        PreparedStatement preparedStatement = connection.prepareStatement(selectByAuthorSQL);
        preparedStatement.setString(1, author);
        ResultSet resultSet = preparedStatement.executeQuery();

        // Process the result set
        while (resultSet.next()) {
            System.out.println(
                    "Title: " + resultSet.getString("title") +
                            ", Author: " + resultSet.getString("author") +
                            ", Price: $" + resultSet.getDouble("price") +
                            ", Quantity: " + resultSet.getInt("qty")
            );
        }

        resultSet.close();
        preparedStatement.close();
    }

    // Implement other functions (increasePrice, setQtyToZero, deleteBookById, insertBooks) similarly
    // ...

}
